% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssc_process.R
\name{ssc_process}
\alias{ssc_process}
\title{Sensitivity to Selection Criteria}
\usage{
ssc_process(
  base_cohort,
  alt_cohorts,
  omop_or_pcornet,
  multi_or_single_site = "single",
  anomaly_or_exploratory = "exploratory",
  person_tbl = cdm_tbl("person"),
  visit_tbl = cdm_tbl("visit_occurrence"),
  provider_tbl = NULL,
  care_site_tbl = NULL,
  demographic_mappings = NULL,
  specialty_concepts = NULL,
  outcome_concepts = NULL,
  domain_tbl = sensitivityselectioncriteria::ssc_domain_file,
  domain_select = sensitivityselectioncriteria::ssc_domain_file \%>\% distinct(domain)
    \%>\% pull()
)
}
\arguments{
\item{base_cohort}{a dataframe including all patients who meet the base cohort definition
should have the columns site | person_id | start_date | end_date}

\item{alt_cohorts}{a list or named list of dataframes with patients meeting alternative
cohort definitions; if names are not provided, numbers will be assigned to each
cohort definition for labelling purposes}

\item{omop_or_pcornet}{Option to run the function using the OMOP or PCORnet CDM as the default CDM
\itemize{
\item \code{omop}: run the \code{\link[=ssc_process_omop]{ssc_process_omop()}} function against an OMOP CDM instance
\item \code{pcornet}: run the \code{\link[=ssc_process_pcornet]{ssc_process_pcornet()}} function against a PCORnet CDM instance
}}

\item{multi_or_single_site}{direction to determine what kind of check to run
string that is either \code{multi} or \code{single}}

\item{anomaly_or_exploratory}{direction to determine what kind of check to run; a string
that is either \code{anomaly} or \code{exploratory}}

\item{person_tbl}{CDM \code{person} table}

\item{visit_tbl}{CDM \code{visit_occurrence} table}

\item{provider_tbl}{the CDM table with provider & provider specialty information
only used if \code{specialty_concepts} are provided
if provider_tbl & care_site_tbl are both not null, provider specialty is
prioritized}

\item{care_site_tbl}{the CDM table with care site / facility & care site / facility specialty information
only used if \code{specialty_concepts} are provided
if provider_tbl & care_site_tbl are both not null, provider specialty is
prioritized}

\item{demographic_mappings}{table defining how demographic elements should be defined
if NULL, the default demographic mappings for the CDM will be used
(either \code{ssc_omop_demographics} or \code{ssc_pcornet_demographics})
otherwise, the user provided table will be used}

\item{specialty_concepts}{a concept set with provider specialty concepts of interest
to be used to identify specialty visits}

\item{outcome_concepts}{a concept set with the following columns:
\code{concept_id} | \code{concept_code} | \code{concept_name} | \code{vocabulary_id} | \code{variable} | \code{domain}

\if{html}{\out{<div class="sourceCode">}}\preformatted{                    where domain matches a domain listed in the `domain_defs` table
}\if{html}{\out{</div>}}}

\item{domain_tbl}{a table with domain definitions with the following columns:
domain, domain_tbl, concept_field, date_field, filter_logic}

\item{domain_select}{a vector of domain names that should be used in the computation
of facts per domain per year of follow up

\if{html}{\out{<div class="sourceCode">}}\preformatted{                 this vector does NOT need to include domains used in the computation for
                 outcomes, as those will be accessed from the table directly
}\if{html}{\out{</div>}}}
}
\value{
a dataframe summarizing fact and demographic distributions for each of the provided
cohort definitions; for both anomaly detection outputs, the standardized mean difference
between the base cohort and each alternate cohort definition is computed for each
of the variables of interest
}
\description{
Sensitivity to Selection Criteria
}
\examples{

#' Source setup file
source(system.file('setup.R', package = 'sensitivityselectioncriteria'))

#' Create in-memory RSQLite database using data in extdata directory
conn <- mk_testdb_omop()

#' Establish connection to database and generate internal configurations
initialize_dq_session(session_name = 'ssc_process_test',
                      working_directory = getwd(),
                      db_conn = conn,
                      is_json = FALSE,
                      file_subdirectory = system.file('extdata',
                                        package = 'sensitivityselectioncriteria'),
                      cdm_schema = NA)

#' Build mock base study cohort
base_cohort <- cdm_tbl('person') \%>\% dplyr::distinct(person_id) \%>\%
  dplyr::mutate(start_date = as.Date(-5000),
                #RSQLite does not store date objects,
                #hence the numerics
                end_date = as.Date(15000),
                site = ifelse(person_id \%in\% c(1:6), 'synth1', 'synth2'))

#' Build mock alternate study cohort
alt_cohort <- cdm_tbl('person') \%>\% dplyr::distinct(person_id) \%>\%
  head(100) \%>\%
  dplyr::mutate(start_date = as.Date(-5000),
                #RSQLite does not store date objects,
                #hence the numerics
                end_date = as.Date(15000),
                site = ifelse(person_id \%in\% c(1:6), 'synth1', 'synth2'))

#' Prepare input tables
ssc_domain_tbl <- dplyr::tibble(domain = c('all conditions', 'outpatient visits'),
                                domain_tbl = c('condition_occurrence', 'visit_occurrence'),
                                concept_field = c('condition_concept_id', 'visit_concept_id'),
                                date_field = c('condition_start_date', 'visit_start_date'),
                                vocabulary_field = c(NA, NA),
                                filter_logic = c(NA, 'visit_concept_id == 9202'))

ssc_outcome_tbl <- read_codeset('dx_hypertension') \%>\%
  dplyr::mutate(variable = 'hypertension', domain = 'all conditions')

#' Execute `ssc_process` function
#' This example will use the single site, exploratory, cross sectional
#' configuration
ssc_process_example <- ssc_process(base_cohort = base_cohort,
                                   alt_cohorts = list('Sample Alternate' = alt_cohort),
                                   omop_or_pcornet = 'omop',
                                   multi_or_single_site = 'single',
                                   anomaly_or_exploratory = 'exploratory',
                                   domain_tbl = ssc_domain_tbl,
                                   domain_select = c('all conditions', 'outpatient visits'),
                                   outcome_concepts = ssc_outcome_tbl)

ssc_process_example

#' Execute `ssc_output` function
ssc_output_example <- ssc_output(process_output = ssc_process_example,
                                 output_function = 'ssc_ss_exp_cs',
                                 alt_cohort_filter = 'alt_cohort_Sample Alternate')

ssc_output_example

#' Easily convert the graph into an interactive ggiraph or plotly object with
#' `make_interactive_ssdqa()`

make_interactive_ssdqa(ssc_output_example[[2]])
}
